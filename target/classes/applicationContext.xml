<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<!-- Spring的配置，数据源，MyBatis整合，事务控制......... -->

	<!-- 1.配置Spring扫描的包 -->
	<context:component-scan base-package="com.hsu.netchat">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- 2.配置数据源 -->
	<!-- 加载配置文件 -->
	<context:property-placeholder location="classpath:dbconfig.properties" />
	<bean id="comboPooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.driverClass}"></property>
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
		<property name="user" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
	</bean>

	<!-- 3.Spring和MyBatis的整合 -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 配置mapper全局配置文件的位置 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"></property>
		<!-- 指定数据源 -->
		<property name="dataSource" ref="comboPooledDataSource"></property>
		<!-- 指定mapper配置文件 -->
		<property name="mapperLocations" value="classpath:sqlMapperConfig/*.xml"></property>
	</bean>

	<!-- 4.配置扫描器，扫描所有的mapper接口 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 这里的value必须写包的全路径名，否则会报错 -->
		<property name="basePackage" value="com.hsu.netchat.dao"></property>
	</bean>

	<!-- 5.配置事务管理器 -->
	<bean id="dataSourceTransactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 配置数据源 -->
		<property name="dataSource" ref="comboPooledDataSource"></property>
	</bean>

	<!-- 配置切入点和切面 -->
	<aop:config>
		<!-- 声明切入点表达式 -->
		<aop:pointcut expression="execution(* com.hsu.netchat.service..*(..))"
			id="txPoincut" />
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoincut" />
	</aop:config>
	<tx:advice id="txAdvice" transaction-manager="dataSourceTransactionManager">
		<tx:attributes>
			<tx:method name="*" />
			<!-- 查询数据配置成只读属性 -->
			<tx:method name="get*" read-only="true" />
		</tx:attributes>
	</tx:advice>

	<!-- 6.配置Shiro 的Web过滤器 -->
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<!-- loginUrl认证提交地址，如果没有认证将会请求此地址进行认证，请求此地址将由formAuthenticationFilter进行表单认证 -->
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/index"></property>
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property>
		<!-- 过虑器链定义，从上向下顺序执行，一般将/**放在最下边 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- 设置对静态资源匿名访问 -->
				/static/** = anon
				/forward.jsp = anon
				<!-- 配置用户名注册时验证用户名为匿名访问 -->
				/checkUsername/** = anon
				/regist = anon
				<!-- 退出拦截，请求logout.action执行退出操作 -->
				/logout = logout
				/ValiImg = anon
				<!-- 设置所有的URL都必须要认证过后才可以登录 -->
				/** = authc
			</value>
		</property>
	</bean>
	<!-- 安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="userRealm" />
		<!-- 注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager"></property>
	</bean>
	<!-- 自定义 realm -->
	<bean id="userRealm" class="com.hsu.netchat.shiro.UserRealm">
		<!-- 将凭证匹配器设置到realm中，realm将按照凭证匹配器进行散列 -->
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>
	<!-- 配置凭证匹配器 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1" />
	</bean>
	<!-- 配置自定义的 form过滤认证器-->
	<bean id="formAuthenticationFilter" class="com.hsu.netchat.filter.UserFormAuthenticationFilter">
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<!-- <property name="rememberMeParam" value="rememberMe"></property> -->
	</bean>
	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
    	<property name="cacheManagerConfigFile" value="classpath:shiro-ehcache.xml"/>
    </bean>
   
    <!-- 会话管理器 -->
  <!--   <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        session的失效时长，单位毫秒
        <property name="globalSessionTimeout" value="600000"/>
        删除失效的session
        <property name="deleteInvalidSessions" value="true"/>
    </bean> -->
</beans>
